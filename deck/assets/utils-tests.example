import { readyToCombust, totalOxygen } from './utils';

describe('totalOxygen', () => {
  it('should be a function', () => {
    expect(totalOxygen).toBeDefined();

    expect(typeof totalOxygen)
      .toBe('function');
  });

  it('should return 0 if given no params', () => {
    expect(totalOxygen())
      .toBe(0);
  });

  it('should return the value of a single param', () => {
    expect(totalOxygen(1))
      .toBe(1);
  });

  it('should return the sum of all params', () => {
    const val = totalOxygen(1,3,5,8);
    expect(val).toBe(17);
  });
});

describe('readyToCombust', () => {
  it('should be a function', () => {
    expect(readyToCombust).toBeDefined();

    expect(typeof readyToCombust)
      .toBe('function');
  });

  it('should error if given no params', () => {
    expect(readyToCombust()).toThrow();
  });

  it('should return false if H₂ is <= 1', () => {
    const enoughO2 = 100;

    expect(readyToCombust(0, enoughO2))
      .toBeFalsy();
    expect(readyToCombust(1, enoughO2))
      .toBeFalsy();
  });

  it('should return false if O₂ is <= 25', () => {
    const enoughH2 = 5;

    expect(readyToCombust(enoughH2, 25))
      .toBeFalsy();
    expect(readyToCombust(enoughH2, 10))
      .toBeFalsy();
  });

  it('should return true if H₂ is > 1 and O₂ is > 25', () => {
    expect(readyToCombust(2, 26)).toBeTruthy();
  });
});
